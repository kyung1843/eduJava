시스템 계정으로 접속 후
DB 작업을 진행할 사용자(스키마)를 만든다.

----- 시스템 계정 -----
1. 시스템 계정 연결
    conn /as sysdba;

(비밀번호 변경 : conn / as sysdba; -> show user; -> alter user sys identified by 변경 할 비밀번호;)

2. 사용자 생성
    create user 사용자 identified by 비밀번호;

3. 사용자에게 권한 부여
    grant dba to 사용자;

----- 사용자 계정 -----

1. 사용자 계정 연결
    conn 계정/비밀번호;

2. 작성된 테이블 확인
    select tname, tabtype from tab;

3. 작성된 시퀀스 확인
    select sequence_name from user_sequences;

4. 작성된 테이블 삭제
    drop table 테이블; (참조테이블 삭제 후 기준테이블 삭제!)

5. 작성된 시퀀스 삭제
    drop sequence 시퀀스; (시퀀스의 시작번호는 다시 1로 초기화 할 수 없으므로 삭제 후 재 생성을 통해 해결)

6. 시퀀스 생성
    create sequence 시퀀스;
    create sequence 시퀀스 start with 1 increment by 1;

7. 테이블 생성
    create table 테이블 (필드 타입 제약조건, 필드 타입 제약조건);

* 주요 타입
    1) char(10) : 고정 길이 문자열, 최대 길이 10
    2) varchar2(10) : 가변 길이 문자열, 최대 길이 10
    3) number : 정수 또는 실수 모두 포함
    4) date : 날짜
    5) timestamp : 날짜

* 주요 제약조건
    1) not null : 공백이 불가능하다.
    2) unique : 중복이 불가능하다.
    3) default : 입력되지 않으면 사용할 기본값이다.
    4) check : 유효한 값의 범위를 제한한다.
    5) primary key : 기본키
    6) constraint 제약조건이름 foreign key(필드) references 기준테이블(기준필드) : 외래키 + 제약조건이름 설정

8. 테이블 생성 예

    		기준테이블		참조테이블
테이블		member		buy
필드			no			no
제약조건		PK			FK	* 제약조건이름 : 테이블_필드_PK, 테이블_필드_FK

    create table member (
        no number not null primary key,
        id varchar2(20) not null unique,
        pw varchar2(20) not null,
        email varchar2(40) unique,
        point number default 1000 check (point between 0 and 10000) not null,
        --point number default 1000 check (point >= 0 and point <= 10000) not null,
        grade varchar2(10) check (grade = 'vip' or grade = 'gold'),
        --grade varchar2(10) check (grade in('vip', 'gold')),
        regdate date default sysdate not null );

    create table buy (
        buyNo number not null primary key,
        no number not null,
        productNo number not null,
        amount number default 1 not null
        constraint member_no_FK foreign key (no) references member(no));

9. 테이블 수정
    1) 열 추가
        alter table 테이블 add 필드 타입 제약조건;
        alter table 테이블 add (필드 타입 제약조건, 필드 타입 제약조건);
    2) 열 삭제
        alter table 테이블 drop column 필드;
        alter table 테이블 drop (필드, 필드);
    3) 열 이름 바꾸기
        alter table 테이블 rename column 기존이름 to 새이름;
    4) 열 데이터 형식 수정
        alter table 테이블 modify (필드 타입 제약조건);
    5) 기본키 제약조건 추가
        alter table 테이블 add primary key (필드);
        alter table 테이블 add constraint 제약조건이름 primary key (필드);
    6) 기본키 제약조건 삭제
        alter table 테이블 drop primary key;
        alter table 테이블 drop constraint 제약조건이름;
    7) 외래키 제약조건 추가
        alter table 참조테이블 add foreign key (참조필드) references 기준테이블 (기준필드);
        (참조테이블의 참조필드는 기준테이블의 기준필드가 가진 값만을 가질 수 있다! => 참조 무결성)
        alter table 참조테이블 add constraint 제약조건이름 foreign key (참조필드) references 기준테이블 (기준필드);
    8) 외래키 제약조건 삭제
        drop table 참조테이블 drop constraint 제약조건이름;
    9) 제약조건 확인
        select constraint_name, constraint_type from user_constraints;

10. 테이블 구조 확인
    desc 테이블;

* 열 조절
col 필드명 format a10;

* 생성된 계정 확인
select * from ALL_users;

* 생성된 계정 삭제
drop user 계정명 cascade;

* 계정 삭제 시 접속중이라서 삭제가 안될 때
1)조회
select sid,serial#,username,status from v$session where schemaname='계정명';

2)변경
alter system kill session '조회된sid, 조회된serial#' immediate;
